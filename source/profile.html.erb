<style>
  .profile-pic img {
    border-radius: 50%;
  }
</style>

<div class="login">
  <h2>Existing user</h2>
  <form>
    <p>Email:<br>
    <input type='email' id='email'>
    </p>

    <p>
    Password:<br>
    <input type='password' id='password'>
    </p>

    <p><input type='submit' id='login-button' value='Login'></p>
  </form>


  <p><a href='#reset-password'>Reset Password</a></p>
</div>

<div class="signup default-hidden">
  <h2>Create account</h2>
  <form>
    <p>Email:<br>
    <input type='email' id='new-email'>
    </p>

    <p>
    Password:<br>
    <input type='password' id='new-password'>
    </p>

    <p><input type='submit' id='signup-button' value='Signup'></p>
  </form>

</div>

<div class="profile-info">
  <figure class='profile-pic'>
    <img>
  </figure>
  <p>Youâ€™re logged in as <span class='email'></span>.</p>
  <p>Display Name: <input type='text' id='display-name' placeholder='Loading...'> <small>(Auto-saved)</small></p>
  <p><a href='#logout'>Logout</a></p>
</div>

<script>

  (function(){
    // sign-up
    $('#signup-button').click(function(){
      var email = $('#new-email').val();
      var password = $('#new-password').val();

      if (email !== '' && password !== '') {
        $(this).val("Processing...").attr('disabled', 'true');

        var ref = new Firebase(global.fburl);
        ref.createUser({
          email    : email,
          password : password
        }, function(error, userData) {
          if (error) {
            alert("Error creating user:" + error);
            $('#signup-button').val("Signup").removeAttr('disabled');
          } else {
            console.log("Successfully created user account with uid:", userData.uid);

            ref.authWithPassword({
              email    : email,
              password : password
            }, function(){
              var userData = new UserData();
              userData.saveDisplayName(email);

              var displayName = email.split('@')[0];
              userData.saveDisplayName(displayName);

              location.reload();
            });
          }
        });
      }

      return false;
    });

  })();

  (function(){
    // reset password
    $('[href="#reset-password"]').click(function(){
      var ref = new Firebase(global.fburl);
      ref.resetPassword({
        email : $('#email').val()
      }, function(error) {
        if (error === null) {
          alert("Password reset email sent successfully");
        } else {
          alert("Error sending password reset email:" + error);
        }
      });

      return false;
    });
  })();

  // UI display

  (function(){
    var user = (new UserData()).getAuth();

    if (user !== null) {
      $('.login').hide();
      $('.profile-info').show();
      $('.profile-info').find('.email').text(user.password.email);
      $('.profile-info').find('.profile-pic').find('img').attr('src', user.password.profileImageURL);


      var userData = new UserData();
      userData.displayName(function(name){
        $('.profile-info').find("#display-name").val(name).removeAttr('placeholder');
      });

    } else {
      $('.profile-info').hide();
      $('.signup').show();
    }
  })();

  // logout
  (function(){
    var authRef = new Firebase(global.fburl);

    $('[href="#logout"]').click(function(){
      authRef.unauth();
      location.reload();
      return false;
    });

  })();

  // login
  (function(){
    var authRef = new Firebase(global.fburl);
    $('#login-button').click(function(){

      $(this).attr('disabled', 'true').val('Processing...');

      authRef.authWithPassword({
        "email": $('#email').val(),
        "password": $('#password').val()
      }, function(error, authData) {
        if (error) {
          console.log("Login Failed!", error);
          alert("Login Failed: " + error);
        } else {
          console.log("Authenticated successfully with payload:", authData);

          location.reload();
        }
      });

      return false;
    });
  })();

  // display name
  (function(){
    var userData = new UserData();

    $('#display-name').change(function(){
      var newName = $(this).val();

      var user = userData.getAuth();
      if (user !== null) {
        if (newName.length > 0) {
          userData.saveDisplayName( newName );
          Intercom('update', {"name": newName});
        } else {
          alert("Please provide a name for chat.");
        }
      }
    });

  })();
</script>




<script>
  // reset current course
  localStorage.removeItem("current-course");
</script>