<style>
  .chat h1,
  .chat h2,
  .chat h3 {
    font-size: 1em;
  }
  .tabs ul{
    list-style: none;
  }
  .tabs ul li {
    display: inline-block;
    width: 50%;
  }

  .tabs a {
    color: rgb(255,204,1);
    font-weight: bold;
    text-decoration: none;
    font-size: .8em;
    width: 100%;
    display: inline-block;
    text-align: center;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
  }

  .tabs a.active {
    background: rgb(255,204,1);
    color: black;
  }

  .tab-panel {
    border: 1px solid rgb(255,204,1);
    display: none;
    padding: .5em;
  }
  .tab-panel.active {
    display: block;
  }

  .tab-panel input {
    max-width: 100%;
  }

  /* Trix */
  trix-editor {
    border: 1px solid #ccc;
    font-size: .8em;
  }
  trix-toolbar button {
    display: none;
  }
  trix-toolbar button.code,
  trix-toolbar button.bold {
    display: block;
  }


  .chat-message {
    overflow-wrap: break-word;
    word-wrap: break-word;
    -webkit-hyphens: auto;
    -ms-hyphens: auto;
    -moz-hyphens: auto;
    hyphens: auto;
  }
</style>

<section class="chat">
  <h2><a href='/chat.html'>Chat</a></h2>
  <%= partial "profile" %>
  <div class="tabs">
    <ul>
      <li><a href='#global-chat-panel' class='active tab'>Global</a>
      <li><a href='#mentor-chat-panel' class='tab'>Thomas</a>
    </ul>
  </div>
  <div id="global-chat-panel" class='active tab-panel'>
    <h3>Global chat in class</h3>
    <div id='global-chat-messages'></div>
    <input type='hidden' id='global-chat-input'>
    <trix-editor input='global-chat-input' id='global-chat-trix' placeholder='Message'></trix-editor>
    <button id='send-global-chat'>Send</button>
  </div>
  <div id="mentor-chat-panel" class='tab-panel'>
    <h3>1-on-1 private chat</h3>
    <div id='mentor-chat-messages'></div>
    <input type='hidden' id='mentor-chat-input'>
    <trix-editor input='mentor-chat-input' id='mentor-chat-trix' placeholder='Message'></trix-editor>
    <button id='send-mentor-chat'>Send</button>
  </div>

  <small>Chat is in alpha testing. Data will be earsed.</small>
</section>

<script>

  // tab control
  $('a.tab').click(function(){
    $('.active.tab-panel').hide();
    $('.active').removeClass('active');

    var href = $(this).attr('href');
    $(this).addClass('active');
    $(href).show().addClass('active');

    return false;
  });

  // Global Chat
  var globalChatDataRef = new Firebase('https://teaching.firebaseio.com/jQuery/global-chat/');


  $('#send-global-chat').click(function(){

    if (readerEmail.length === 0 || readerName.length === 0) {
      alert("Please enter your name and email before posting message.");
      return false;
    }

    var text = $('#global-chat-input').val();
    globalChatDataRef.push({name: readerName, email: readerEmail, text: text});

    var element = $('#global-chat-trix')[0];
    element.editor.setSelectedRange([0, 99999]);
    element.editor.deleteInDirection("forward");
  });
  globalChatDataRef.on('child_added', function(snapshot) {
    var message = snapshot.val();
    displayGlobalChatMessage(message.name, message.text);
  });
  function displayGlobalChatMessage(name, text) {
    $('<div/>').addClass('chat-message').html(text).prepend($('<em/>').text(name+': ')).appendTo($('#global-chat-messages')).autolink();
    $('#global-chat-messages')[0].scrollTop = $('#global-chat-messages')[0].scrollHeight;
  };


  // Mentor Chat
  if (readerEmail.length > 0) {
    var emailSlug = readerEmail.replace('@','-at-').replace(/\./g,'-dot-');
    var mentorChatDataRef = new Firebase('https://teaching.firebaseio.com/jQuery/mentor-chats/' + emailSlug + '/chat/');

    var hasNewRef = new Firebase('https://teaching.firebaseio.com/jQuery/mentor-chats/' + emailSlug + '/has-new-chat');

    var newChatNotificationRef = new Firebase('https://teaching.firebaseio.com/jQuery/has-new-chats/' + emailSlug + '/');

    $('#send-mentor-chat').click(function(){

      if (readerEmail.length === 0 || readerName.length === 0) {
        alert("Please enter your name and email before posting message.");
        return false;
      }

      var text = $('#mentor-chat-input').val();
      mentorChatDataRef.push({name: readerName, text: text});

      var element = $('#mentor-chat-trix')[0];
      element.editor.setSelectedRange([0, 99999]);
      element.editor.deleteInDirection("forward");
    });
    mentorChatDataRef.on('child_added', function(snapshot) {
      var message = snapshot.val();
      displayMentorChatMessage(message.name, message.text);

      if (message.is_mentor === true) {
        hasNewRef.set(false);
        newChatNotificationRef.set(false);
      } else {
        hasNewRef.set(true);
        newChatNotificationRef.set(true);
      }
    });
    function displayMentorChatMessage(name, text) {
      $('<div/>').addClass('chat-message').html(text).prepend($('<em/>').text(name+': ')).appendTo($('#mentor-chat-messages')).autolink();
      $('#mentor-chat-messages')[0].scrollTop = $('#mentor-chat-messages')[0].scrollHeight;
    };

  }
</script>